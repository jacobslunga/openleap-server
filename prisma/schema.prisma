generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  username  String   @unique
  firstName String?
  lastName  String?
  fullName  String?   @map("full_name") @default("")
  imageUrl  String?
  authProvider String
  isPremium Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tasks     Task[]
  memberships ProjectMember[]
  skills    Skill[]
}

model Project {
  id        String   @id @default(uuid())
  name      String
  description String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tasks     Task[]
  members ProjectMember[]
}

model ProjectMember {
  user      User    @relation(fields: [userId], references: [id])
  userId    String
  project   Project @relation(fields: [projectId], references: [id])
  projectId String
  role      String
  isOwner   Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([userId, projectId])
}

model Task {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  project   Project  @relation(fields: [projectId], references: [id])
  projectId String
  assignee  User?    @relation(fields: [assigneeId], references: [id])
  assigneeId String?
  status    String   @default("TODO")
  priority  String   @default("LOW")
  dueDate   DateTime?
  description String?
}

model Skill {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String?
  user      User?    @relation(fields: [userId], references: [id])
}
